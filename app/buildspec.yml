version: 0.2

env:
  variables:
    IMAGE_REPO_NAME: "sample-app"

phases:
  pre_build:
    commands:
      - IMAGE_TAG=$(cat tag.txt)
      - REPOSITORY_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}
      - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      - chmod 755 kubectl
      - mv kubectl /usr/local/bin/kubectl
      - echo $DOCKER_TOKEN | docker login -u $DOCKER_USER --password-stdin
  build:
    commands:
      - docker build -t ${IMAGE_REPO_NAME}:${IMAGE_TAG} .
  post_build:
    commands:
      - aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com
      - docker tag ${IMAGE_REPO_NAME}:${IMAGE_TAG} ${REPOSITORY_URI}:${IMAGE_TAG}
      - docker push ${REPOSITORY_URI}:${IMAGE_TAG}
      - IMAGE_PATH=$(echo ${REPOSITORY_URI}:${IMAGE_TAG})
      - aws eks update-kubeconfig --name ${EKS_CLUSTER_NAME} --region ${EKS_CLUSTER_REGION}  --role-arn ${EKS_CLUSTER_ROLE}
      - KUBECONFIG=/root/.kube/config
      - /bin/bash deploy/apply-image.sh
      - /bin/bash scripts/notification.sh $?

